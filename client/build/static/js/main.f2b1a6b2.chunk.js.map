{"version":3,"sources":["store/actions/AuthActions.js","store/providers/AuthProvider.js","components/homelayout/sidebar/Links.js","store/actions/CoreActions.js","store/providers/CoreProvider.js","components/homelayout/sidebar/Profile.js","components/homelayout/sidebar/Sidebar.js","components/homelayout/stockbar/Stockcard.js","components/homelayout/stockbar/Stockbar.js","components/homelayout/views/stockview/StockHeader.js","components/homelayout/views/stockview/StockGraph.js","components/homelayout/views/stockview/StockStats.js","components/homelayout/views/stockview/StockOrder.js","components/homelayout/views/stockview/StockNews.js","components/homelayout/views/stockview/StockView.js","components/homelayout/views/orderview/OrderHistory.js","components/homelayout/views/orderview/OrderForm.js","components/homelayout/views/orderview/OrderFunds.js","components/homelayout/views/orderview/OrderView.js","routers/ViewRouter.js","components/homelayout/HomeLayout.js","components/authlayout/AuthForm.js","components/authlayout/AuthLayout.js","routers/AppRouter.js","store/providers/Provider.js","App.js","serviceWorker.js","index.js"],"names":["login","args","a","email","password","axios","post","query","result","data","errors","message","token","userID","response","signup","AuthContext","createContext","Promise","resolve","logout","AuthProvider","children","useState","setUserID","setToken","updateAuth","Provider","value","actions","Links","useContext","className","mode","defaultSelectedKeys","Item","key","icon","DashboardOutlined","to","AreaChartOutlined","LogoutOutlined","onClick","getUser","user","CoreContext","stockRef","stocks","selectStock","index","getStocks","CoreProvider","setstockRef","setUser","ticker","name","change","price","shares","open","ask","bid","high","low","volume","setStocks","Profile","useEffect","loading","active","size","shape","UserOutlined","accounts","balance","renderInfo","Sider","Layout","Sidebar","theme","trigger","Stockcard","props","stock","color","label","Math","abs","style","renderChange","Stockbar","map","StockHeader","prefix","labelPercent","labelPrice","toFixed","textAlign","StockGraph","setData","testData","i","randomChange","random","push","height","width","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","dataKey","type","domain","stroke","fillOpacity","fill","Descriptions","stats","StockStats","layout","bordered","stat","charAt","toUpperCase","slice","StockOrder","setShares","onChange","e","min","max","StockNews","news","setNews","testNews","headline","author","date","reverse","StockView","gutter","xs","lg","title","OrderHistory","action","description","orders","order","withdraw","deposit","buy","sell","renderOrder","Option","Select","OrderForm","span","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","Group","defaultValue","Button","htmlType","OrderFunds","OrderView","ViewRouter","exact","path","component","HomeLayout","AuthForm","formType","formRef","useRef","onFinish","formData","current","getFieldsValue","notification","ref","rules","required","placeholder","LockOutlined","float","noStyle","href","TabPane","Tabs","RegisterLayout","align","justify","md","tab","AppRouter","AuthLayout","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f2b1a6b2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n    login: async(args) => {\r\n        const {email, password} = args;\r\n\r\n        try {\r\n            const result = await axios.post(\"/api/graph\", { query: \r\n                `\r\n                {\r\n                    login(email: \"${email}\",password: \"${password}\") {\r\n                        token\r\n                        message\r\n                    }\r\n                }\r\n                `\r\n            })\r\n\r\n            if(result.data.errors) return {message: result.data.errors[0].message}\r\n\r\n            return {\r\n                token: result.data.data.login.token,\r\n                userID: result.data.data.login.userID,\r\n            }\r\n        } catch (error) {\r\n            return {message: error.response}\r\n        }\r\n    },\r\n\r\n    signup: async(args) => {\r\n        const {email, password} = args;\r\n\r\n        try {\r\n            const result = await axios.post(\"/api/graph\", { query: \r\n                `\r\n                mutation{\r\n                    signup(email: \"${email}\",password: \"${password}\") {\r\n                        token\r\n                        message\r\n                    }\r\n                }\r\n                `\r\n            })\r\n\r\n            if(result.data.errors) return {message: result.data.errors[0].message}\r\n\r\n            return {\r\n                token: result.data.data.login.token,\r\n                userID: result.data.data.login.userID,\r\n            }\r\n        } catch (error) {\r\n            return {message: error.response}\r\n        }\r\n    },\r\n}","import React, { useState, createContext } from 'react';\r\nimport actions from '../actions/AuthActions'\r\n\r\nexport const AuthContext = createContext({\r\n    userID: \"\",\r\n    token: \"\",\r\n\r\n    login: () => new Promise((resolve) => {}),\r\n    signup: () => new Promise((resolve) => {}),\r\n    logout: () => {},\r\n})\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [userID, setUserID] = useState(\"\");\r\n    const [token, setToken] = useState(\"\");\r\n\r\n    const updateAuth = (result) => {\r\n        if(result.message) return result.message;\r\n\r\n        setUserID(result.userID)\r\n        setToken(result.setToken)        \r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                userID,\r\n                token,\r\n\r\n                login: async (args) => {\r\n                    let result = await actions.login(args);\r\n                    return updateAuth(result)\r\n                },\r\n\r\n                signup: async (args) => {\r\n                    let result = await actions.signup(args);\r\n                    return updateAuth(result)\r\n                },\r\n\r\n                logout: () => {\r\n                    setUserID(\"\");\r\n                    setToken(\"\");\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import React, {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Menu } from \"antd\"\r\n\r\nimport {\r\n    DashboardOutlined,\r\n    AreaChartOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { AuthContext } from '../../../store/providers/AuthProvider';\r\n\r\nfunction Links() {\r\n    const { logout } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Menu\r\n            className=\"sidebar-menu\"\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['portfolio']}\r\n        >\r\n            <Menu.Item key='portfolio' icon={<DashboardOutlined/>}>\r\n                Portfolio\r\n                <NavLink to='/home/stock'/>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='orders' icon={<AreaChartOutlined/>}>\r\n                Orders\r\n                <NavLink to='/home/order'/>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='logout' icon={<LogoutOutlined/>}>\r\n                Logout\r\n                <NavLink to='/auth' onClick={logout}/>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default Links;","import axios from 'axios';\r\n\r\nexport default {\r\n    getUser: async(args) => {        \r\n        let {userID} = args;\r\n\r\n        userID = \"5f90d652b211944c9ca8b278\"\r\n\r\n        try {\r\n            const result = await axios.post(\"/api/graph\", { query: \r\n                `\r\n                {\r\n                    user(id: \"${userID}\") {\r\n                        email\r\n                        accounts{\r\n                            balance\r\n                            portfolio{\r\n                                id\r\n                                shares\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                `\r\n            })\r\n\r\n            if(result.data.errors) return {message: result.data.errors[0].message}\r\n            return result.data.data.user\r\n        } catch (error) {\r\n            return {message: error.response}\r\n        }\r\n    },\r\n}","import React, { useState, createContext, useContext } from 'react';\r\nimport { AuthContext } from './AuthProvider';\r\nimport actions from '../actions/CoreActions'\r\n\r\nexport const CoreContext = createContext({\r\n    user: null,\r\n    stockRef: 0,\r\n    stocks: [],\r\n\r\n    selectStock: (index) => {},\r\n    getStocks: () => new Promise((resolve) => {}),\r\n})\r\n\r\nexport const CoreProvider = ({children}) => {\r\n    const { token, userID } = useContext(AuthContext);\r\n\r\n    const [stockRef, setstockRef] = useState(0);\r\n    const [user, setUser] = useState(null);\r\n    const [stocks, setStocks] = useState([\r\n        {\r\n            ticker: 'AAPL',\r\n            name: 'Apple Inc.',\r\n            change: -3.34,\r\n            price: 113.16,\r\n            shares: 15 ,\r\n            open: 115.75,\r\n            ask: 113.16,\r\n            bid: 113.12,\r\n            high: 115.94,\r\n            low: 108.66,\r\n            volume: '7.8 M',\r\n        },\r\n        {\r\n            ticker: 'TSLA',\r\n            name: 'Tesla Inc.',\r\n            change: 2.75,\r\n            price: 413.98,\r\n            shares: 4,\r\n            open: 410.44,\r\n            ask: 413.96,\r\n            bid: 413.12,\r\n            high: 425.94,\r\n            low: 397.66,\r\n            volume: '2.8 M',\r\n        },\r\n        {\r\n            ticker: 'MSFT',\r\n            name: 'Microsoft',\r\n            change: -2.12,\r\n            price: 205.91,\r\n            shares: 7,\r\n            open: 207.75,\r\n            ask: 205.16,\r\n            bid: 205.12,\r\n            high: 212.94,\r\n            low: 192.66,\r\n            volume: '9.4 M',\r\n        },\r\n        {\r\n            ticker: 'GOOGL',\r\n            name: 'Google',\r\n            change: +2.15,\r\n            price: 1451.02,\r\n            shares: 2,\r\n            open: 1475.50,\r\n            ask: 14751.02,\r\n            bid: 1475.98,\r\n            high: 1474.94,\r\n            low: 1460.66,\r\n            volume: '1.7 M',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <CoreContext.Provider\r\n            value={{\r\n                user,\r\n                stockRef,\r\n                stocks,\r\n\r\n                getUser: async() => {                    \r\n                    let result = await actions.getUser({userID});\r\n                    if(result.message) return false                    \r\n                    \r\n                    setUser(result);\r\n                },\r\n\r\n                selectStock: (index) => {\r\n                    setstockRef(index);\r\n                },\r\n\r\n                getStocks: async() => {\r\n                    // fetch stock data from REST API server\r\n                    setStocks([]);\r\n                },\r\n            }}\r\n        >\r\n            {children}\r\n        </CoreContext.Provider>\r\n    );\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { Avatar, Skeleton } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { CoreContext } from '../../../store/providers/CoreProvider';\r\n\r\nfunction Profile() {\r\n    const { user, getUser } = useContext(CoreContext);\r\n\r\n    useEffect(() => {\r\n        if(!user) {\r\n            getUser();\r\n        }\r\n    }, [])\r\n\r\n    const renderInfo = () => {\r\n        if(user) return (\r\n            <div className=\"profile-info\">\r\n                <p className=\"info-name\">{user.email}</p>\r\n                <p className=\"info-balance\">${user.accounts[0].balance}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (        \r\n        <div className=\"profile\">\r\n            <Skeleton loading={!user} active>\r\n                <Avatar\r\n                    className=\"profile-avatar\"\r\n                    size={48}\r\n                    shape=\"square\"\r\n                    icon={<UserOutlined/>}\r\n                />\r\n                {renderInfo()}\r\n            </Skeleton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport Links from './Links';\r\nimport Profile from './Profile';\r\n\r\nconst { Sider } = Layout;\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <Sider\r\n            className=\"sidebar\"\r\n            theme=\"light\"\r\n            trigger={null}\r\n        >\r\n            <div className=\"sidebar-header\">\r\n                <p>fleamarket 52</p>\r\n            </div>\r\n\r\n            <div className=\"sidebar-content\">\r\n                <Links/>\r\n                <Profile/>\r\n            </div>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, { useContext } from 'react';\r\nimport { CoreContext } from '../../../store/providers/CoreProvider';\r\n\r\nfunction Stockcard({props: {stock, index}}) {\r\n    const {selectStock, stockRef} = useContext(CoreContext);\r\n\r\n    const getCardClass = () => {\r\n        if(index === stockRef) {\r\n            return 'stockcard-selected'\r\n        } else {\r\n            return 'stockcard'\r\n        }\r\n    }\r\n\r\n    const renderChange = (change) => {\r\n        const color = (change > 0) ? 'green' : 'red';\r\n        const prefix = (change > 0) ? '+' : '-';\r\n        const label = prefix + Math.abs(change);\r\n\r\n        return (\r\n            <p\r\n                className=\"stockcard-change\"\r\n                style={{color: color}}\r\n                key={`stockchange-${index}`}\r\n            >\r\n                {label}%\r\n            </p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={getCardClass()} onClick={() => selectStock(index)}>\r\n            <p className=\"stockcard-ticker\">{stock.ticker}</p>\r\n            {renderChange(stock.change)}\r\n            <p className=\"stockcard-price\">${stock.price} x {stock.shares}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stockcard;","import React, { useContext } from 'react';\r\nimport { CoreContext } from '../../../store/providers/CoreProvider';\r\nimport { Layout } from 'antd';\r\nimport Stockcard from './Stockcard';\r\n\r\nconst { Sider } = Layout;\r\n\r\nfunction Stockbar() {\r\n    const {stocks} = useContext(CoreContext);\r\n\r\n    return (\r\n        <Sider\r\n            className=\"stockbar\"\r\n            theme=\"light\"\r\n            trigger={null}\r\n        >\r\n            <div className=\"stockbar-menu\">\r\n                {\r\n                    stocks.map((stock, index) => <Stockcard key={`stockcard-${index}`} props={{stock, index}}/>)\r\n                }\r\n            </div>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default Stockbar;","import React from 'react';\r\n\r\nfunction StockHeader({stock}) {\r\n\r\n    const renderChange = ({change, price}) => {\r\n        const color = (change > 0) ? 'green' : 'red';\r\n        const prefix = (change > 0) ? '+' : '-';        \r\n        const labelPercent = Math.abs(change);\r\n        const labelPrice = prefix + '$' + (labelPercent * price * 0.01).toFixed(2)\r\n\r\n        return (\r\n            <p\r\n                className=\"stockview-change\"\r\n                style={{color: color, textAlign: 'right'}}\r\n            >\r\n                {labelPrice} ({labelPercent}%)\r\n            </p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"stockview-header\">\r\n            <div>\r\n                <p className=\"stockview-title\">{stock.name}</p>\r\n                <p className=\"stockview-shares\">You own {stock.shares} shares of {stock.ticker}.</p>\r\n            </div>\r\n\r\n            <div>\r\n                <p className=\"stockview-price\">${stock.price}</p>\r\n                {renderChange(stock)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockHeader;","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    ResponsiveContainer, XAxis, YAxis, CartesianGrid,\r\n    Tooltip, AreaChart, Area\r\n} from 'recharts';\r\n\r\nfunction StockGraph({stock}) {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let testData = [];\r\n        for(let i=0; i<13; i++) {\r\n            const randomChange = (Math.random() * (stock.price * 10) * 0.01)\r\n\r\n            testData.push({\r\n                name: `Oct ${i+1}`,\r\n                price: (randomChange + stock.price).toFixed(2)\r\n            })\r\n        }\r\n\r\n        testData.push({name: \"Oct 14\", price: stock.price})\r\n\r\n        setData(testData);\r\n    }, [stock])\r\n\r\n    return (\r\n        <ResponsiveContainer height={300} width=\"99%\">\r\n            <AreaChart data={data}>\r\n                <defs>\r\n                    <linearGradient id=\"colorStock\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                        <stop offset=\"5%\" stopColor=\"#BA9781\" stopOpacity={0.8}/>\r\n                        <stop offset=\"95%\" stopColor=\"#BA9781\" stopOpacity={0}/>\r\n                    </linearGradient>\r\n                </defs>\r\n\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis type=\"number\" domain={['dataMin - 10', 'dataMax + 10']}/>\r\n                <Tooltip/>\r\n                <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"price\"\r\n                    stroke=\"#BA9781\"\r\n                    fillOpacity={1}\r\n                    fill=\"url(#colorStock)\"\r\n                />\r\n            </AreaChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nexport default StockGraph;","import React from 'react';\r\nimport { Descriptions } from 'antd';\r\n\r\nconst { Item } = Descriptions;\r\n\r\nconst stats = ['open', 'ask', 'bid', 'high', 'low', 'volume']\r\n\r\nfunction StockStats({stock}) {\r\n\r\n    return (\r\n        <Descriptions className=\"stockview-stats\" layout=\"vertical\" bordered>\r\n            {stats.map((stat, index) => (\r\n                <Item\r\n                    label={stat.charAt(0).toUpperCase() + stat.slice(1)}\r\n                    key={`desc-item-${index}`}\r\n                >\r\n                    {stock[stat] ? stock[stat] : 'N/A'}\r\n                </Item>\r\n            ))}\r\n        </Descriptions>\r\n    );\r\n}\r\n\r\nexport default StockStats;","import React, {useState} from 'react';\r\nimport { Divider, Button, InputNumber } from 'antd';\r\n\r\nfunction StockOrder({stock}) {\r\n    const [shares, setShares] = useState(0);\r\n\r\n    return (\r\n        <div className=\"stockview-order-form\">\r\n            <div className=\"stockorder-form-item\">\r\n                <p>Shares</p>\r\n                <InputNumber\r\n                    className=\"stockorder-input\"                    \r\n                    onChange={(e) => setShares(e)}\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={99}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"stockorder-form-item\">\r\n                <p>Market Price</p>\r\n                <p>${stock.price}</p>\r\n            </div>\r\n\r\n            <Divider className=\"stockorder-divider\"/>\r\n\r\n            <div className=\"stockorder-form-item\">\r\n                <p>Total Cost</p>\r\n                <p>${(shares * stock.price).toFixed(2)}</p>\r\n            </div>\r\n\r\n            <Button style={{width: '100%'}} type=\"primary\">Confirm Order</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockOrder;","import React, {useEffect, useState} from 'react';\r\nimport { Button } from 'antd';\r\n\r\nfunction StockNews({stock}) {\r\n    const [news, setNews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let testNews = [\r\n            {\r\n                headline: `${stock.name} declares 4:1 stock split...`,\r\n                author: 'The Verge',\r\n                date: 'Oct 1'\r\n            },\r\n            {\r\n                headline: `${stock.name} slumps at keynote event...`,\r\n                author: 'Wall Street Journal',\r\n                date: 'Oct 3'\r\n            },\r\n            {\r\n                headline: `Big investor sells ${stock.name} shares...`,\r\n                author: 'The Verge',\r\n                date: 'Oct 3'\r\n            },\r\n            {\r\n                headline: `${stock.name} announces new CEO amid...`,\r\n                author: 'New York Times',\r\n                date: 'Oct 4'\r\n            },\r\n            {\r\n                headline: `${stock.name} underfire for insider trading...`,\r\n                author: 'The Verge',\r\n                date: 'Oct 5'\r\n            },\r\n            {\r\n                headline: `${stock.name} bounces back from slump...`,\r\n                author: 'The Verge',\r\n                date: 'Oct 5'\r\n            },\r\n            {\r\n                headline: `${stock.name} announces new device...`,\r\n                author: 'The Verge',\r\n                date: 'Oct 7'\r\n            },\r\n        ]\r\n\r\n        setNews(testNews);\r\n    }, [stock])\r\n\r\n    return (\r\n        <div className=\"stockview-news\">\r\n            {news.reverse().map((news, index) => (\r\n                <div className=\"news-card\" key={`stockview-${index}`}>\r\n                    <p>{news.headline}</p>\r\n\r\n                    <div className=\"news-meta\">\r\n                        <p>{news.author}</p>\r\n                        <p>{news.date}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n\r\n            <Button style={{width: '100%'}}>View More</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockNews;","import React, { useContext } from 'react';\r\nimport { CoreContext } from '../../../../store/providers/CoreProvider';\r\nimport { Row, Col, Card } from 'antd'\r\n\r\nimport StockHeader from './StockHeader';\r\nimport StockGraph from './StockGraph';\r\nimport StockStats from './StockStats';\r\nimport StockOrder from './StockOrder';\r\nimport StockNews from './StockNews';\r\n\r\nfunction StockView() {\r\n    const {stockRef, stocks} = useContext(CoreContext)\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={16}>\r\n                <Col xs={24} lg={18}>                   \r\n                    <Card className=\"stockview-card\">\r\n                        <StockHeader stock={stocks[stockRef]}/>\r\n                        <StockGraph stock={stocks[stockRef]}/>\r\n                    </Card>\r\n                    \r\n                    <StockStats stock={stocks[stockRef]}/>\r\n                </Col>\r\n\r\n                <Col xs={24} lg={6}>\r\n                    <Card className=\"stockview-card\" title=\"Order\">\r\n                        <StockOrder stock={stocks[stockRef]}/>\r\n                    </Card>\r\n\r\n                    <Card className=\"stockview-card\" title=\"News\">\r\n                        <StockNews stock={stocks[stockRef]}/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockView;","import React, { useState } from 'react';\r\nimport { Timeline } from 'antd'\r\n\r\nfunction OrderHistory() {\r\n    const [orders] = useState([\r\n        {\r\n            action: 'deposit',\r\n            description: 'Deposited $2500.00'\r\n        },\r\n        {\r\n            action: 'buy',\r\n            description: 'Bought 4 shares of TSLA @ $410.31 each'\r\n        },\r\n        {\r\n            action: 'buy',\r\n            description: 'Bought 3 shares of AAPL @ $119.41 each'\r\n        },\r\n        {\r\n            action: 'withdraw',\r\n            description: 'Withdrew $2000.00'\r\n        },        \r\n        {\r\n            action: 'sell',\r\n            description: 'Sold 2 shares of GOOGL @ $1190.41 each'\r\n        },\r\n        {\r\n            action: 'deposit',\r\n            description: 'Deposited $2500.00'\r\n        },\r\n        {\r\n            action: 'buy',\r\n            description: 'Bought 4 shares of TSLA @ $410.31 each'\r\n        },\r\n        {\r\n            action: 'buy',\r\n            description: 'Bought 3 shares of AAPL @ $119.41 each'\r\n        },\r\n        {\r\n            action: 'withdraw',\r\n            description: 'Withdrew $2000.00'\r\n        },        \r\n        {\r\n            action: 'sell',\r\n            description: 'Sold 2 shares of GOOGL @ $1190.41 each'\r\n        },\r\n        {\r\n            action: 'deposit',\r\n            description: 'Deposited $2500.00'\r\n        },\r\n        {\r\n            action: 'buy',\r\n            description: 'Bought 4 shares of TSLA @ $410.31 each'\r\n        },\r\n        {\r\n            action: 'buy',\r\n            description: 'Bought 3 shares of AAPL @ $119.41 each'\r\n        },\r\n    ])\r\n\r\n    const renderOrder = (order, index) => {\r\n        const colors = {withdraw: 'gray', deposit: '#40A9FF', buy: 'green', sell: 'red'}\r\n\r\n        return (\r\n            <Timeline.Item color={colors[order.action]} id={index}>\r\n                {order.description}\r\n            </Timeline.Item>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Timeline>\r\n            {orders.map((order, index) => renderOrder(order, index))}\r\n        </Timeline>\r\n    );\r\n}\r\n\r\nexport default OrderHistory;","import React, { useContext } from 'react';\r\nimport { Row, Col, Form, Select, Radio, InputNumber, DatePicker, Divider, Button } from 'antd'\r\nimport { CoreContext } from '../../../../store/providers/CoreProvider';\r\n\r\nconst { Option } = Select\r\n\r\nfunction OrderForm() {\r\n    const {stocks} = useContext(CoreContext);   \r\n\r\n    return (\r\n        <Form layout='vertical'>\r\n            <Row gutter={16}>\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                        label=\"Symbol\"\r\n                        name=\"symbol\"\r\n                    >\r\n                        <Select\r\n                            id=\"symbol\"\r\n                            showSearch\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) => option['children'].toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                        >\r\n                            {stocks.map((stock, index) => (\r\n                                <Option id={index} value={index}>\r\n                                    {stock.ticker}\r\n                                </Option>\r\n                            ))}\r\n                        </Select>                        \r\n                    </Form.Item>                    \r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                        label=\"Price Type\"\r\n                        name=\"priceType\"\r\n                    >\r\n                        <Select id=\"priceType\">\r\n                            <Option value=\"market\">Market</Option>\r\n                            <Option value=\"limit\">Limit</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n                <Col span={16}>\r\n                    <Form.Item\r\n                        label=\"Action\"\r\n                        name=\"action\"\r\n                    >\r\n                        <Radio.Group id=\"action\" defaultValue=\"buy\" className=\"order-action-group\">\r\n                            <Radio.Button className=\"order-action-btn\" value=\"buy\">Buy</Radio.Button>\r\n                            <Radio.Button className=\"order-action-btn\" value=\"sell\">Sell</Radio.Button>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <Form.Item\r\n                        label=\"Quantity\"\r\n                        name=\"quantity\"\r\n                    >\r\n                        <InputNumber id=\"quantity\" className=\"order-action-group\" min={0}/>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Form.Item\r\n                label=\"Good 'til\"\r\n                name=\"goodTill\"\r\n            >\r\n                <DatePicker id='goodTill' className=\"order-action-group\"/>\r\n            </Form.Item>\r\n\r\n            <Divider className=\"stockorder-divider\"/>\r\n\r\n            <div className=\"stockorder-form-item\">\r\n                <p>Total Cost</p>\r\n                <p>$0.00</p>\r\n            </div>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">Confirm Order</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default OrderForm;","import React from 'react';\r\nimport { Row, Col, Form, Radio, InputNumber, Button } from 'antd'\r\n\r\nfunction OrderFunds() {\r\n    return (\r\n        <Form layout='vertical'>\r\n            <Row gutter={16}>\r\n                <Col span={16}>\r\n                    <Form.Item\r\n                        label=\"Action\"\r\n                        name=\"action\"\r\n                    >\r\n                        <Radio.Group id=\"action\" defaultValue=\"deposit\" className=\"order-action-group\">\r\n                            <Radio.Button className=\"order-action-btn\" value=\"deposit\">Deposit</Radio.Button>\r\n                            <Radio.Button className=\"order-action-btn\" value=\"withdraw\">Withdraw</Radio.Button>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <Form.Item\r\n                        label=\"Amount\"\r\n                        name=\"amount\"\r\n                    >\r\n                        <InputNumber id=\"amount\" className=\"order-action-group\" min={0}/>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">Confirm Transaction</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default OrderFunds;","import React from 'react';\r\nimport { Row, Col, Card } from 'antd'\r\nimport OrderHistory from './OrderHistory';\r\nimport OrderForm from './OrderForm';\r\nimport OrderFunds from './OrderFunds';\r\n\r\n\r\nfunction OrderView() {\r\n    return (\r\n        <div>\r\n            <Row gutter={16}>\r\n                <Col xs={24} lg={18}>                   \r\n                    <Card className=\"stockview-card\" title=\"Order\">\r\n                        <OrderForm/>\r\n                    </Card>\r\n                    \r\n                    <Card className=\"stockview-card\" title=\"Manage Funds\">\r\n                        <OrderFunds/>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs={24} lg={6}>\r\n                    <Card className=\"stockview-card\" title=\"History\">\r\n                        <OrderHistory/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderView;","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nimport StockView from '../components/homelayout/views/stockview/StockView'\r\nimport OrderView from '../components/homelayout/views/orderview/OrderView'\r\n\r\nconst ViewRouter = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={StockView}/>\r\n        <Route exact path=\"/home\" component={StockView}/>\r\n        <Route path=\"/home/stock\" component={StockView}/>\r\n        <Route path=\"/home/order\" component={OrderView}/>\r\n    </Switch>\r\n)\r\n\r\nexport default ViewRouter","import React from 'react';\r\nimport { Layout } from 'antd'\r\n\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport Stockbar from './stockbar/Stockbar';\r\nimport ViewRouter from '../../routers/ViewRouter'\r\n\r\nfunction HomeLayout() {\r\n    return (\r\n        <Layout className=\"home-layout\">\r\n            <Sidebar/>\r\n            <Stockbar/>\r\n\r\n            <Layout className=\"view-layout\">\r\n                <ViewRouter/>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default HomeLayout;","import React, {useState, useContext, useRef } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {Form, Input, Checkbox, Button, notification} from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { AuthContext } from '../../store/providers/AuthProvider';\r\n\r\n\r\nfunction AuthForm({ formType }) {\r\n    const { login, signup, userID } = useContext(AuthContext);\r\n    const formRef = useRef();\r\n\r\n    const onFinish = async () => {\r\n        const formData = formRef.current.getFieldsValue()\r\n\r\n        let result = await {'login': login, 'signup': signup}[formType](formData)\r\n\r\n        if(result) {\r\n            notification['error']({\r\n                message: 'Authentication Error',\r\n                description: result\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderLogin = () => (\r\n        <Form onFinish={onFinish} ref={formRef}>\r\n            <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email.'}]}>\r\n                <Input id='email' prefix={<UserOutlined/>} placeholder=\"Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input password.'}]}>\r\n                <Input id='password' prefix={<LockOutlined/>} placeholder=\"Password\" type=\"password\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Form.Item style={{float: 'left'}} noStyle>\r\n                    <Checkbox id='remember'>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a href=\"/\" style={{float: 'right'}}>Forgot Password?</a>\r\n            </Form.Item>\r\n\r\n            <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"register-button\"\r\n            >\r\n                Log In\r\n            </Button>\r\n        </Form>\r\n    )\r\n\r\n    const renderSignup = () => (\r\n        <Form onFinish={onFinish} ref={formRef}>\r\n            <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input email.'}]}>\r\n                <Input id='email' prefix={<UserOutlined/>} placeholder=\"Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input password.'}]}>\r\n                <Input id='password' prefix={<LockOutlined/>} placeholder=\"Password\" type=\"password\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"confirm_password\" rules={[{ required: true, message: 'Please confirm password.'}]}>\r\n                <Input id='confirm_password' prefix={<LockOutlined/>} placeholder=\"Confirm Password\" type=\"password\"/>\r\n            </Form.Item>\r\n\r\n            <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"register-button\"\r\n            >\r\n                Sign Up\r\n            </Button>\r\n        </Form>\r\n    )\r\n\r\n    if(userID != \"\") {\r\n        return <Redirect to='/home'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(formType === 'login') ? renderLogin() : renderSignup()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import React from 'react'\r\nimport {Row, Col, Tabs} from 'antd'\r\nimport AuthForm from './AuthForm'\r\n// import RegisterForm from './RegisterForm'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nfunction RegisterLayout() {\r\n    return (\r\n        <div>\r\n            <div className=\"register-bg\"/>\r\n            <Row\r\n                className=\"register-page\"\r\n                align=\"middle\"\r\n                justify=\"center\"\r\n            >\r\n                <Col md={12} xs={24}>\r\n                    <div className=\"register-card\">\r\n                        <div style={{width: '100%'}}>\r\n                            <h1 className=\"register-title\">fleamarket 52</h1>\r\n\r\n                            <Tabs>\r\n                                <TabPane tab=\"Login\" key=\"login\">\r\n                                    <AuthForm formType=\"login\"/>\r\n                                </TabPane>\r\n                                <TabPane tab=\"Signup\" key=\"signup\">\r\n                                    <AuthForm formType=\"signup\"/>\r\n                                </TabPane>\r\n                            </Tabs>\r\n\r\n                            <p className=\"register-footer\">\r\n                                Developed by Shrish Mohapatra for COMP 2406\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col md={12} xs={0}/>\r\n                \r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterLayout","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nimport HomeLayout from '../components/homelayout/HomeLayout'\r\nimport AuthLayout from '../components/authlayout/AuthLayout'\r\n\r\nconst AppRouter = (props) => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={HomeLayout}/>\r\n        <Route exact path=\"/auth\" component={AuthLayout}/>\r\n        <Route path=\"/home\" component={HomeLayout}/>\r\n    </Switch>\r\n)\r\n\r\nexport default AppRouter","import React from 'react';\r\n\r\nimport AppRouter from '../../routers/AppRouter';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nimport { CoreProvider } from './CoreProvider';\r\nimport { AuthProvider } from './AuthProvider';\r\n\r\nfunction Provider() {\r\n    return (\r\n        <AuthProvider>\r\n            <CoreProvider>\r\n                <BrowserRouter>\r\n                    <AppRouter/>\r\n                </BrowserRouter>\r\n            </CoreProvider>\r\n        </AuthProvider>\r\n    );\r\n}\r\n\r\nexport default Provider;","import React from 'react';\nimport Provider from './store/providers/Provider';\n\nimport 'antd/dist/antd.less';\nimport './App.less';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}